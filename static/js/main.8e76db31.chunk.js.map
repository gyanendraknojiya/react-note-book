{"version":3,"sources":["components/User/User.component.jsx","Redux/User/User.selector.js","Redux/Note/Note.selector.js","components/AddNote/AddNote.component.jsx","components/Note/Note.component.jsx","components/Notes/Notes.component.jsx","Redux/Note/note.action.js","Redux/User/user.action.js","App.js","Redux/User/user.reducer.js","Redux/Note/note.reducer.js","Redux/root-reducer.js","Redux/store.js","index.js"],"names":["User","props","className","onSubmit","onsubmit","type","name","UserSelector","createSelector","state","user","currentUser","NoteSelector","Notes","allnotes","AddNote","useState","show","setShow","text","placeholder","onClick","required","autoComplete","id","cols","rows","style","display","onChange","onchange","value","date","NoteToDisplay","title","content","onclick","toString","mapStatetoProps","createStructuredSelector","allNotes","connect","dispatch","setAllNotes","note","payload","AddNewNote","NoteToBeDelete","RemoveCurrentUser","Date","setDate","removeNote","noteID","console","log","e","preventDefault","NoteToSave","uniqid","target","toDateString","length","reverse","map","item","key","href","rel","setCurrentUser","INITIAL_STATE","UserReducer","action","NoteReducer","filter","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e76db31.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./User.styles.css\";\r\n\r\nconst User = (props) => {\r\n  return (\r\n    <div className=\"userBack\">\r\n      <div className=\"user\">\r\n        <div className=\"userBox\">\r\n          <h2>Enter Your Name</h2>\r\n          <form className=\"form-group\" onSubmit={props.onsubmit}>\r\n            <input className=\"form-control\" type=\"text\" name=\"name\" />\r\n            <button className=\"btn btn-outline-light mt-5\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import {createSelector} from 'reselect'\r\n\r\nconst selectUser = state=> state.user;\r\n\r\nexport const UserSelector = createSelector([selectUser], user=> user.currentUser)\r\n\r\n","import {createSelector} from 'reselect'\r\n\r\nconst selectNote = state=> state.Notes;\r\n\r\nexport const NoteSelector = createSelector([selectNote], Notes=> Notes.allnotes)\r\n\r\n","import React, {useState} from \"react\";\r\nimport Calendar from 'react-calendar';\r\n\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"./AddNote.styles.css\";\r\n\r\nconst AddNote = (props) => {\r\nconst [show, setShow] = useState(\"none\")\r\n\r\n\r\nconst showFullForm= ()=>{\r\n  setShow(\"block\")\r\n}\r\nconst HideForm=()=>{\r\n  setShow('none')\r\n}\r\n  return (\r\n    <div className=\"addForm\">\r\n      <form className=\"form-group\" onSubmit={props.onsubmit}>\r\n        <h3 className='form-heading'>Add a note here...</h3>\r\n        <input\r\n          text=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          placeholder=\"Note title*\"\r\n         onClick={showFullForm}\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n        <textarea\r\n          name=\"content\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          className=\"form-control mt-2\"\r\n          placeholder=\"Note Content*\"\r\n          style={{display: `${show}`}}\r\n          required\r\n        />\r\n        <div style={{display: `${show}`}} className=\"Calendar\">\r\n        <Calendar\r\n         \r\n          onChange={props.onchange}\r\n          value={props.date}\r\n          className=\"my-3\"\r\n        />\r\n      </div>\r\n        <button className=\"btn btn-outline-success mt-3 mx-auto\"  style={{display: `${show}`}} onClick={HideForm}>ADD</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import React from \"react\";\r\n\r\nimport \"./Note.styles.css\";\r\n\r\nconst NoteToDisplay = ({title, content, id, onclick, date}) => {\r\n  return (\r\n<div className='col-md-4'>\r\n    <div className=\"NoteToDisplay mx-5\">\r\n      <h3 className=\"NoteTitle\">{title}</h3>\r\n      <hr/>\r\n      <p className=\"NoteContent\">{content}</p>\r\n     <p>{date.toString()}</p>\r\n      <button onClick={()=>onclick(id)} className='btn btn-warning btn-sm' >Remove</button>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteToDisplay;\r\n","import React,{useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport uniqid from \"uniqid\";\r\n\r\nimport { UserSelector } from \"../../Redux/User/User.selector\";\r\nimport { NoteSelector } from \"../../Redux/Note/Note.selector\";\r\nimport {\r\n  AddNewNote,\r\n  DeleteNote,\r\n  RemoveAllNote,\r\n} from \"../../Redux/Note/note.action\";\r\nimport { LogoutCurrentUser } from \"../../Redux/User/user.action\";\r\n\r\nimport AddNote from \"../AddNote/AddNote.component\";\r\nimport NoteToDisplay from \"../Note/Note.component\";\r\nimport \"./Notes.styles.css\";\r\n\r\nconst Notes = ({\r\n  currentUser,\r\n  setAllNotes,\r\n  allNotes,\r\n  NoteToBeDelete,\r\n  RemoveCurrentUser,\r\n}) => {\r\nconst [date, setDate] = useState(new Date());\r\n\r\n\r\n\r\n  const takeNote = (e) => {\r\n    e.preventDefault();\r\n    const NoteToSave = {\r\n      id: uniqid(),\r\n      title: e.target[0].value,\r\n      content: e.target[1].value,\r\n      date: date.toDateString()\r\n    };\r\n    setAllNotes(NoteToSave);\r\n    e.target[0].value = \"\";\r\n    e.target[1].value = \"\";\r\n  };\r\n\r\n  const removeNote = (noteID) => {\r\n    console.log(noteID);\r\n    NoteToBeDelete(noteID);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"notes\">\r\n        <div className='inner' >\r\n          {currentUser ? (\r\n            <div className=\"header\">\r\n              <span className=\"User-Name\">Hello! {currentUser}</span>{\" \"}\r\n              <span\r\n                className=\" btn btn-danger btn-sm float-right m-2 mr-3\"\r\n                onClick={RemoveCurrentUser}\r\n              >\r\n                LogOut\r\n          </span>\r\n            </div>\r\n          ) : null}\r\n          <AddNote onsubmit={takeNote} onchange={setDate} date={date} />\r\n          <div className=\"row text-center\">\r\n            {allNotes.length > 0\r\n              ? allNotes.reverse().map((item) => (\r\n                <NoteToDisplay\r\n                  key={item.id}\r\n                  title={item.title}\r\n                  content={item.content}\r\n                  id={item.id}\r\n                  date={item.date}\r\n                  onclick={removeNote}\r\n                />\r\n              ))\r\n              : null}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        &#9400; Copyright: 2020: All Rights Reserved <br /> Made with <span>&#10084; </span>\r\n        By{\" \"}\r\n        <a\r\n          href=\"https://gyanendra.tech\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Gyanendra\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = createStructuredSelector({\r\n  currentUser: UserSelector,\r\n  allNotes: NoteSelector,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setAllNotes: (note) => dispatch(AddNewNote(note)),\r\n  NoteToBeDelete: (note) => dispatch(DeleteNote(note)),\r\n  RemoveCurrentUser: () => {\r\n    dispatch(LogoutCurrentUser());\r\n    dispatch(RemoveAllNote());\r\n  },\r\n});\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Notes);\r\n","export const AddNewNote = (note) => {\r\n    return { type: \"ADD_NEW_NOTE\", payload: note };\r\n  };\r\n \r\n  export const DeleteNote = (noteID) => {\r\n    return { type: \"DELETE_A_NOTE\", payload: noteID };\r\n  };\r\n\r\n  export const RemoveAllNote = () => {\r\n    return { type: \"DELETE_ALL_NOTE\" };\r\n  };\r\n  ","export const setCurrentUser = (user) => {\r\n    return { type: \"SET_CURRENT_USER\", payload: user };\r\n  };\r\n  \r\n  export const LogoutCurrentUser = () => {\r\n    return { type: \"LOGOUT_CURRENT_USER\"};\r\n  };\r\n  ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {createStructuredSelector} from 'reselect'\n\n\nimport { setCurrentUser } from \"./Redux/User/user.action\";\nimport User from \"./components/User/User.component\";\nimport Notes from './components/Notes/Notes.component'\nimport { UserSelector} from './Redux/User/User.selector'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\";\n\nfunction App({setCurrentUser, currentUser}) {\n\nconst onsubmitUserName =(e)=>{\n  e.preventDefault();\n  const name = e.target[0].value\n  setCurrentUser(name)\n}\n\n  return (\n    <div className=\"App\">\n      {!currentUser?<User onsubmit={onsubmitUserName} />: null}\n      {currentUser?<Notes />: null}\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nconst mapStatetoProps = createStructuredSelector({\n  currentUser: UserSelector,\n});\n\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(App);\n","const INITIAL_STATE = {\r\n    currentUser: null,\r\n  };\r\n  \r\n  const UserReducer = (state = INITIAL_STATE, action) => {\r\n    if (action.type === \"SET_CURRENT_USER\") {\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    } else if (action.type === 'LOGOUT_CURRENT_USER'){\r\n      return {\r\n        ...state,\r\n        currentUser: \"\",\r\n      };\r\n    }\r\n     else {\r\n      return state;\r\n    }\r\n  };\r\n  \r\n  export default UserReducer;\r\n  ","const INITIAL_STATE = {\r\n  allnotes: [],\r\n};\r\n\r\nconst NoteReducer = (state = INITIAL_STATE, action) => {\r\n  if (action.type === \"ADD_NEW_NOTE\") {\r\n    return {\r\n      ...state,\r\n      allnotes: [...state.allnotes, { ...action.payload }],\r\n    };\r\n  } else if (action.type === \"DELETE_A_NOTE\") {\r\n    return {\r\n      ...state,\r\n      allnotes: state.allnotes.filter((item) => item.id !== action.payload),\r\n    };\r\n  } else if (action.type === \"DELETE_ALL_NOTE\") {\r\n    return {\r\n      ...state,\r\n      allnotes: [],\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default NoteReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport UserReducer from \"./User/user.reducer\";\r\nimport NoteReducer from './Note/note.reducer'\r\n\r\nexport default combineReducers({\r\n  user: UserReducer,\r\n  Notes: NoteReducer\r\n});\r\n\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' \r\n\r\nimport rootReducer from './root-reducer'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user', 'Notes']\r\n  }\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  const middleware = []\r\n\r\nif (process.env.NODE_ENV === 'development'){\r\n  middleware.push(logger)\r\n}\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(...middleware))\r\nexport const persistor = persistStore(store)\r\n\r\nexport default { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./Redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}